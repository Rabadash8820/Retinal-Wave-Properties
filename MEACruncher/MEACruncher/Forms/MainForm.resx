<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADyAwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAEDAAAAZrw6JQAAAAZQ
        TFRFAAAAZJXtODQ6qQAAA6dJREFUaN7tmm/u2yAMhh3KB76NI3CTcTSO1iPtAJO6GGP+BeNomqZpv4Ai
        2uQpJa79EnABIAEeZw32gGCpxQr5AIgyYDIQZMBmwMuAy4CTAZ8BKwMhA0YGYgYOGUgZwGYNkBlyR2vA
        FCBIgC2AlwBXACcBvgBWAkIBDLzekF7vYNtx4LlYgEMCihkAL64ANsNpiDVgKkAegQOsR/OG5hEXwFXA
        rQFfAbsGQgXMGogVONZANUPxiBloZigeMQOmA8IKsB3gV4DrALcCfAfYFRA6wKyAYobPWfDtFUh0DThs
        ZuDoDBFzHQCTazMD1gGwuTYzYB0Al2szQ37XA+Uz1Qy5vx4o31rNkEeEFyK3NO7qDxRIaFBu6c6bP2A9
        L2T75PaY/AHrecEAt2byh1xpqNTayR+wnhcccOsmf8B6XvDArZ/8Aet5IQC3zQxn4OZApaAFbiO9rsAx
        A4mBz4depBE46IPoMK8d8B6CK5Q759AbywP8T0AcAXMBwgjYC+BHwF0ANwItKFDJfpJU9gAGxfeqcoaO
        UEYWLYnkOF+gLpR7S5afnXojoC7QqQNs9xBVjYC6QJ0asPylw8RZ45W1YZovUBfo5hxknZjnC9QFOufB
        lk8M8wXqAvUa8kuY9CEHLb+27VwL/zXQhb/Ygw6M1qhjXpUvDXyo/Oh/X/zVv5ULo0cM/jOWwcd6b2hT
        Z+elY1AModFHwVUf+OQcFJdu56C4DMyCoA98a3NQXM6OZuj0gfvlb7voA48sgqAPfG8JBH0A1gcQ9AFY
        H0DQB2B9AEEfgPUBBH0A1gcQ9AFYH0DQh/WhAp2ALI5RQISveMpTnvJvlr8Q/rf0YStiWFQZHM6thHTo
        dSXFERQxT7CfDtQJZTsl3ZrUADbT4mwKkCbWzrjrqbmNSpjcu/taPh6oDxjqI4r6kCM/Jt190AJ4HlkV
        oAXqb64O/sACpHmDsAhq3rBZRtH7zUKMetws5chLN4tB8nN5OakuSLdL2luL4mKK9bK6M8V+YR60pX3U
        NgfSs4vyJYASpEnaPLy7/ShvYBZgswXa4lXYRKWgULZh1Y1cdStY3UzWtqPVDW11S1zdVFe35dWNfTU1
        oCYXtumJWwmObYqE54u0TbKoaRqvJXqCliqKWrIpKekqNeGlpszUpJuatvOgJP4CKKnD+FKSj+m1T1+q
        CVA1haomYdU0rtcSwUFLJUctGZ2UdLaaEFdT6mpSXk3re1D+GBBA+WtBBOXPCQl2f2/4BSoW+77Q9KhN
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>